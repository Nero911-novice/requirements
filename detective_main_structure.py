import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from scipy import stats
import json
from datetime import datetime
from typing import Dict, List, Any
import uuid

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =====
st.set_page_config(
    page_title="Statistical Detective üïµÔ∏è",
    page_icon="üïµÔ∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .detective-header {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 2rem;
    }
    
    .case-card {
        border: 2px solid #e1e5e9;
        border-radius: 10px;
        padding: 1rem;
        margin: 1rem 0;
        background: #f8f9fa;
    }
    
    .score-badge {
        background: #28a745;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 15px;
        font-weight: bold;
    }
</style>
""", unsafe_allow_html=True)

# ===== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø =====
def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    init_game_state()
    
    # –•–µ–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    render_header()
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
    render_sidebar()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    render_main_content()
    
    # –§—É—Ç–µ—Ä
    render_footer()

# ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =====
def init_game_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    if 'player_id' not in st.session_state:
        st.session_state.player_id = str(uuid.uuid4())[:8]
    
    if 'player_stats' not in st.session_state:
        st.session_state.player_stats = {
            'score': 0,
            'level': 1,
            'solved_cases': set(),
            'current_streak': 0,
            'best_streak': 0,
            'achievements': set(),
            'play_time': 0,
            'started_at': datetime.now().isoformat()
        }
    
    if 'current_case' not in st.session_state:
        st.session_state.current_case = None

# ===== –ò–ù–¢–ï–†–§–ï–ô–° =====
def render_header():
    """–†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    st.markdown("""
    <div class="detective-header">
        <h1>üïµÔ∏è Statistical Detective</h1>
        <h3>–ò–≥—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤: –ü–æ–π–º–∞–π –æ—à–∏–±–∫—É —Ä–∞–Ω—å—à–µ, —á–µ–º –æ–Ω–∞ –ø–æ–π–º–∞–µ—Ç —Ç–µ–±—è!</h3>
    </div>
    """, unsafe_allow_html=True)

def render_sidebar():
    """–ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –∏–≥—Ä–æ–∫–∞"""
    with st.sidebar:
        st.header("üë§ –ü—Ä–æ—Ñ–∏–ª—å –¥–µ—Ç–µ–∫—Ç–∏–≤–∞")
        
        stats = st.session_state.player_stats
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2 = st.columns(2)
        with col1:
            st.metric("üéØ –û—á–∫–∏", stats['score'])
            st.metric("üî• –°–µ—Ä–∏—è", stats['current_streak'])
        with col2:
            st.metric("‚≠ê –£—Ä–æ–≤–µ–Ω—å", stats['level'])
            st.metric("‚úÖ –†–µ—à–µ–Ω–æ", len(stats['solved_cases']))
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        next_level_threshold = stats['level'] * 100
        current_progress = stats['score'] % 100
        progress_pct = current_progress / 100
        
        st.markdown("**–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è:**")
        st.progress(progress_pct)
        st.caption(f"{current_progress}/100 –æ—á–∫–æ–≤")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if stats['achievements']:
            st.markdown("**üèÜ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**")
            for achievement in list(stats['achievements'])[-3:]:
                st.success(f"üéñÔ∏è {achievement}")
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"):
            reset_game_state()
            st.rerun()

def render_main_content():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–µ–∂–∏–º–∞–º
    game_mode = st.selectbox(
        "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:",
        [
            "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",
            "üîç –ù–∞–π–¥–∏ –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏–∑–µ",
            "üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π",
            "‚ö†Ô∏è –ü–æ–π–º–∞–π –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å",
            "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å",
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏"
        ]
    )
    
    # –†–æ—É—Ç–∏–Ω–≥ –ø–æ —Ä–µ–∂–∏–º–∞–º
    if game_mode == "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
        render_home_page()
    elif game_mode == "üîç –ù–∞–π–¥–∏ –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏–∑–µ":
        render_error_hunting_mode()
    elif game_mode == "üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π":
        render_decision_scenarios_mode()
    elif game_mode == "‚ö†Ô∏è –ü–æ–π–º–∞–π –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å":
        render_bias_hunting_mode()
    elif game_mode == "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å":
        render_random_case_mode()
    elif game_mode == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏":
        render_stats_mode()

def render_home_page():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤—ã–±–æ—Ä–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    st.markdown("## üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–µ—Ç–µ–∫—Ç–∏–≤!")
    
    st.markdown("""
    –¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≥–∞–¥–æ–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫! 
    –ó–¥–µ—Å—å —Ç–µ–±—è –∂–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –∏–∑ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    """)
    
    # –ö–∞—Ä—Ç–æ—á–∫–∏ —Å —Ä–µ–∂–∏–º–∞–º–∏ –∏–≥—Ä—ã
    col1, col2, col3 = st.columns(3)
    
    with col1:
        render_mode_card(
            "üîç –û—Ö–æ—Ç–∞ –∑–∞ –æ—à–∏–±–∫–∞–º–∏",
            "–ù–∞–π–¥–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê",
            "error_hunting"
        )
    
    with col2:
        render_mode_card(
            "üéØ –ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π",
            "–ü–æ—à–∞–≥–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê‚≠ê",
            "decisions"
        )
    
    with col3:
        render_mode_card(
            "‚ö†Ô∏è –î–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–µ–π",
            "–ù–∞–π–¥–∏ —Å–∫—Ä—ã—Ç—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
            "bias_detection"
        )
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ / –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    render_news_section()

def render_mode_card(title: str, description: str, difficulty: str, mode_key: str):
    """–†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã"""
    st.markdown(f"""
    <div class="case-card">
        <h4>{title}</h4>
        <p>{description}</p>
        <p><strong>{difficulty}</strong></p>
    </div>
    """, unsafe_allow_html=True)

def render_news_section():
    """–°–µ–∫—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    st.markdown("---")
    st.markdown("## üì∞ –ù–æ–≤–æ—Å—Ç–∏ –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±—é—Ä–æ")
    
    news_items = [
        {
            'date': '2025-05-23',
            'title': '–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–µ–π—Å—ã –ø–æ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é',
            'description': '–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å multiple testing –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç—å—é'
        },
        {
            'date': '2025-05-20',
            'title': '–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            'description': '–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –±–µ–π–¥–∂–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥—É–∫—Ç, –≤–µ–±-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞'
        }
    ]
    
    for news in news_items:
        with st.expander(f"üìÖ {news['date']} - {news['title']}"):
            st.write(news['description'])

# ===== –ò–ì–†–û–í–´–ï –†–ï–ñ–ò–ú–´ =====
def render_error_hunting_mode():
    """–†–µ–∂–∏–º –æ—Ö–æ—Ç—ã –∑–∞ –æ—à–∏–±–∫–∞–º–∏"""
    st.markdown("## üîç –û—Ö–æ—Ç–∞ –∑–∞ –æ—à–∏–±–∫–∞–º–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ")
    st.markdown("–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã —Å –æ—à–∏–±–∫–∞–º–∏. –ù–∞–π–¥–∏ –∏—Ö –≤—Å–µ!")
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–≤–æ–π –∫–æ–¥ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    st.info("üöß –†–µ–∂–∏–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –∫–µ–π—Å—ã!")

def render_decision_scenarios_mode():
    """–†–µ–∂–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π"""
    st.markdown("## üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π")
    st.info("üöß –†–µ–∂–∏–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è —Å—Ü–µ–Ω–∞—Ä–∏–∏!")

def render_bias_hunting_mode():
    """–†–µ–∂–∏–º –æ—Ö–æ—Ç—ã –∑–∞ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—è–º–∏"""
    st.markdown("## ‚ö†Ô∏è –î–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–µ–π")
    st.info("üöß –†–µ–∂–∏–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –æ—Ö–æ—Ç–∞ –∑–∞ bias!")

def render_random_case_mode():
    """–†–µ–∂–∏–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–µ–π—Å–∞"""
    st.markdown("## üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å")
    
    if st.button("üé≤ –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å", type="primary"):
        st.info("üöß –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–µ–π—Å–æ–≤!")

def render_stats_mode():
    """–†–µ–∂–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤"""
    st.markdown("## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏")
    
    stats = st.session_state.player_stats
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### üìà –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        
        stats_data = {
            '–ú–µ—Ç—Ä–∏–∫–∞': [
                '–û–±—â–∏–π —Å—á–µ—Ç',
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å', 
                '–†–µ—à–µ–Ω–æ –∫–µ–π—Å–æ–≤',
                '–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è',
                '–õ—É—á—à–∞—è —Å–µ—Ä–∏—è',
                '–í—Ä–µ–º—è –∏–≥—Ä—ã (–º–∏–Ω)'
            ],
            '–ó–Ω–∞—á–µ–Ω–∏–µ': [
                stats['score'],
                stats['level'],
                len(stats['solved_cases']),
                stats['current_streak'],
                stats['best_streak'],
                stats['play_time']
            ]
        }
        
        st.table(stats_data)
    
    with col2:
        st.markdown("### üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
        
        if stats['achievements']:
            for achievement in stats['achievements']:
                st.success(f"üéñÔ∏è {achievement}")
        else:
            st.info("–ü–æ–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–µ—Ç. –ù–∞—á–Ω–∏ —Ä–µ—à–∞—Ç—å –∫–µ–π—Å—ã!")

# ===== –ò–ì–†–û–í–ê–Ø –ú–ï–•–ê–ù–ò–ö–ê =====
def award_points(points: int, case_id: str = None):
    """–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—á–∫–æ–≤ –∏–≥—Ä–æ–∫—É"""
    st.session_state.player_stats['score'] += points
    
    if case_id:
        st.session_state.player_stats['solved_cases'].add(case_id)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
    new_level = (st.session_state.player_stats['score'] // 100) + 1
    if new_level > st.session_state.player_stats['level']:
        st.session_state.player_stats['level'] = new_level
        st.balloons()
        st.success(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ {new_level} —É—Ä–æ–≤–Ω—è!")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏–∏
    st.session_state.player_stats['current_streak'] += 1
    st.session_state.player_stats['best_streak'] = max(
        st.session_state.player_stats['best_streak'],
        st.session_state.player_stats['current_streak']
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    check_achievements()

def reset_streak():
    """–°–±—Ä–æ—Å —Å–µ—Ä–∏–∏ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ"""
    st.session_state.player_stats['current_streak'] = 0

def check_achievements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    stats = st.session_state.player_stats
    achievements = stats['achievements']
    
    # –ü–µ—Ä–≤—ã–µ –æ—á–∫–∏
    if stats['score'] >= 10 and '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏' not in achievements:
        achievements.add('–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏' - –ó–∞—Ä–∞–±–æ—Ç–∞–π –ø–µ—Ä–≤—ã–µ –æ—á–∫–∏!")
    
    # –°–µ—Ä–∏–∏
    if stats['current_streak'] >= 5 and '–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤' not in achievements:
        achievements.add('–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤' - 5 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥!")
    
    # –£—Ä–æ–≤–Ω–∏
    if stats['level'] >= 3 and '–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫' not in achievements:
        achievements.add('–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫' - –î–æ—Å—Ç–∏–≥–Ω–∏ 3 —É—Ä–æ–≤–Ω—è!")

def reset_game_state():
    """–°–±—Ä–æ—Å –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    st.session_state.player_stats = {
        'score': 0,
        'level': 1,
        'solved_cases': set(),
        'current_streak': 0,
        'best_streak': 0,
        'achievements': set(),
        'play_time': 0,
        'started_at': datetime.now().isoformat()
    }

def render_footer():
    """–§—É—Ç–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    st.markdown("---")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("### üéØ –û –ø—Ä–æ–µ–∫—Ç–µ")
        st.markdown("""
        **Statistical Detective** - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ 
        –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ –≤—ã—è–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫.
        """)
    
    with col2:
        st.markdown("### üîó –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã")
        st.markdown("""
        - [–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–≤](https://probability-laws-demo.streamlit.app/)
        - [GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π](https://github.com/your-username/statistics-detective)
        """)
    
    with col3:
        st.markdown("### üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        st.metric("ID —Å–µ—Å—Å–∏–∏", st.session_state.player_id)

# ===== –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø =====
if __name__ == "__main__":
    main()
