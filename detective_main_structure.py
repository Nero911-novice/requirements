import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from scipy import stats
import json
from datetime import datetime
from typing import Dict, List, Any
import uuid
import time
import random

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =====
st.set_page_config(
    page_title="Statistical Detective üïµÔ∏è",
    page_icon="üïµÔ∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .detective-header {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 2rem;
    }
    
    .case-card {
        border: 2px solid #e1e5e9;
        border-radius: 10px;
        padding: 1rem;
        margin: 1rem 0;
        background: #f8f9fa;
    }
    
    .score-badge {
        background: #28a745;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 15px;
        font-weight: bold;
    }
</style>
""", unsafe_allow_html=True)

# ===== –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø =====
def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    init_game_state()
    
    # –•–µ–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    render_header()
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
    render_sidebar()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    render_main_content()
    
    # –§—É—Ç–µ—Ä
    render_footer()

# ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø =====
def init_game_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    if 'player_id' not in st.session_state:
        st.session_state.player_id = str(uuid.uuid4())[:8]
    
    if 'player_stats' not in st.session_state:
        st.session_state.player_stats = {
            'score': 0,
            'level': 1,
            'solved_cases': set(),
            'current_streak': 0,
            'best_streak': 0,
            'achievements': set(),
            'play_time': 0,
            'started_at': datetime.now().isoformat()
        }
    
    if 'current_case' not in st.session_state:
        st.session_state.current_case = None

# ===== –ò–ù–¢–ï–†–§–ï–ô–° =====
def render_header():
    """–†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    st.markdown("""
    <div class="detective-header">
        <h1>üïµÔ∏è Statistical Detective</h1>
        <h3>–ò–≥—Ä–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤: –ü–æ–π–º–∞–π –æ—à–∏–±–∫—É —Ä–∞–Ω—å—à–µ, —á–µ–º –æ–Ω–∞ –ø–æ–π–º–∞–µ—Ç —Ç–µ–±—è!</h3>
    </div>
    """, unsafe_allow_html=True)

def render_sidebar():
    """–ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –∏–≥—Ä–æ–∫–∞"""
    with st.sidebar:
        st.header("üë§ –ü—Ä–æ—Ñ–∏–ª—å –¥–µ—Ç–µ–∫—Ç–∏–≤–∞")
        
        stats = st.session_state.player_stats
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2 = st.columns(2)
        with col1:
            st.metric("üéØ –û—á–∫–∏", stats['score'])
            st.metric("üî• –°–µ—Ä–∏—è", stats['current_streak'])
        with col2:
            st.metric("‚≠ê –£—Ä–æ–≤–µ–Ω—å", stats['level'])
            st.metric("‚úÖ –†–µ—à–µ–Ω–æ", len(stats['solved_cases']))
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        next_level_threshold = stats['level'] * 100
        current_progress = stats['score'] % 100
        progress_pct = current_progress / 100
        
        st.markdown("**–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è:**")
        st.progress(progress_pct)
        st.caption(f"{current_progress}/100 –æ—á–∫–æ–≤")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if stats['achievements']:
            st.markdown("**üèÜ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:**")
            for achievement in list(stats['achievements'])[-3:]:
                st.success(f"üéñÔ∏è {achievement}")
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å"):
            reset_game_state()
            st.rerun()

def render_main_content():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–µ–∂–∏–º–∞–º
    game_mode = st.selectbox(
        "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:",
        [
            "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",
            "üîç –ù–∞–π–¥–∏ –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏–∑–µ",
            "üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π",
            "‚ö†Ô∏è –ü–æ–π–º–∞–π –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å",
            "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å",
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏"
        ]
    )
    
    # –†–æ—É—Ç–∏–Ω–≥ –ø–æ —Ä–µ–∂–∏–º–∞–º
    if game_mode == "üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞":
        render_home_page()
    elif game_mode == "üîç –ù–∞–π–¥–∏ –æ—à–∏–±–∫—É –≤ –∞–Ω–∞–ª–∏–∑–µ":
        render_error_hunting_mode()
    elif game_mode == "üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π":
        render_decision_scenarios_mode()
    elif game_mode == "‚ö†Ô∏è –ü–æ–π–º–∞–π –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å":
        render_bias_hunting_mode()
    elif game_mode == "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å":
        render_random_case_mode()
    elif game_mode == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏":
        render_stats_mode()

def render_home_page():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤—ã–±–æ—Ä–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    st.markdown("## üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–µ—Ç–µ–∫—Ç–∏–≤!")
    
    st.markdown("""
    –¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≥–∞–¥–æ–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫! 
    –ó–¥–µ—Å—å —Ç–µ–±—è –∂–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã –∏–∑ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    """)
    
    # –ö–∞—Ä—Ç–æ—á–∫–∏ —Å —Ä–µ–∂–∏–º–∞–º–∏ –∏–≥—Ä—ã
    col1, col2, col3 = st.columns(3)
    
    with col1:
        render_mode_card(
            "üîç –û—Ö–æ—Ç–∞ –∑–∞ –æ—à–∏–±–∫–∞–º–∏",
            "–ù–∞–π–¥–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê",
            "error_hunting"
        )
    
    with col2:
        render_mode_card(
            "üéØ –ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π",
            "–ü–æ—à–∞–≥–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê‚≠ê",
            "decisions"
        )
    
    with col3:
        render_mode_card(
            "‚ö†Ô∏è –î–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–µ–π",
            "–ù–∞–π–¥–∏ —Å–∫—Ä—ã—Ç—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö",
            "–°–ª–æ–∂–Ω–æ—Å—Ç—å: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
            "bias_detection"
        )
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ / –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    render_news_section()

def render_mode_card(title: str, description: str, difficulty: str, mode_key: str):
    """–†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã"""
    st.markdown(f"""
    <div class="case-card">
        <h4>{title}</h4>
        <p>{description}</p>
        <p><strong>{difficulty}</strong></p>
    </div>
    """, unsafe_allow_html=True)

def render_news_section():
    """–°–µ–∫—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    st.markdown("---")
    st.markdown("## üì∞ –ù–æ–≤–æ—Å—Ç–∏ –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±—é—Ä–æ")
    
    news_items = [
        {
            'date': '2025-05-23',
            'title': '–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–µ–π—Å—ã –ø–æ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é',
            'description': '–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å multiple testing –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç—å—é'
        },
        {
            'date': '2025-05-20',
            'title': '–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            'description': '–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –±–µ–π–¥–∂–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥—É–∫—Ç, –≤–µ–±-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞'
        }
    ]
    
    for news in news_items:
        with st.expander(f"üìÖ {news['date']} - {news['title']}"):
            st.write(news['description'])

# ===== –ò–ì–†–û–í–´–ï –†–ï–ñ–ò–ú–´ =====
def render_error_hunting_mode():
    """–†–µ–∂–∏–º –æ—Ö–æ—Ç—ã –∑–∞ –æ—à–∏–±–∫–∞–º–∏"""
    st.markdown("## üîç –û—Ö–æ—Ç–∞ –∑–∞ –æ—à–∏–±–∫–∞–º–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ")
    st.markdown("–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Ä–µ–∞–ª—å–Ω—ã–µ –∫–µ–π—Å—ã —Å –æ—à–∏–±–∫–∞–º–∏. –ù–∞–π–¥–∏ –∏—Ö –≤—Å–µ!")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–µ–π—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫
    error_cases = get_analysis_error_cases()
    
    # –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    difficulty = st.selectbox("–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:", ["–ù–æ–≤–∏—á–æ–∫", "–ê–Ω–∞–ª–∏—Ç–∏–∫", "–≠–∫—Å–ø–µ—Ä—Ç"])
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∫–µ–π—Å—ã –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    available_cases = [case for case in error_cases if case['difficulty'] == difficulty]
    
    if not available_cases:
        st.warning("–í—Å–µ –∫–µ–π—Å—ã —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ä–µ—à–µ–Ω—ã! –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π —É—Ä–æ–≤–µ–Ω—å.")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã–π –∫–µ–π—Å
    unsolved_cases = [case for case in available_cases if case['id'] not in st.session_state.player_stats['solved_cases']]
    if not unsolved_cases:
        unsolved_cases = available_cases  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ, –µ—Å–ª–∏ –≤—Å–µ —Ä–µ—à–µ–Ω—ã
    
    # –í—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–µ–π—Å–∞
    case_titles = [case['title'] for case in unsolved_cases]
    if case_titles:
        selected_title = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å:", case_titles)
        current_case = next(case for case in unsolved_cases if case['title'] == selected_title)
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–µ–π—Å
        display_analysis_case(current_case)

def render_decision_scenarios_mode():
    """–†–µ–∂–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π"""
    st.markdown("## üéØ –°—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π")
    st.markdown("–ü–æ—à–∞–≥–æ–≤—ã–µ –∫–µ–π—Å—ã –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏. –ö–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Å—Ö–æ–¥!")
    
    scenarios = get_decision_scenarios()
    
    scenario_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π:", [s['title'] for s in scenarios])
    selected_scenario = next(s for s in scenarios if s['title'] == scenario_choice)
    
    play_scenario(selected_scenario)

def render_bias_hunting_mode():
    """–†–µ–∂–∏–º –æ—Ö–æ—Ç—ã –∑–∞ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—è–º–∏"""
    st.markdown("## ‚ö†Ô∏è –î–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–µ–π")
    st.markdown("–ù–∞–π–¥–∏ —Å–∫—Ä—ã—Ç—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–∏ –≤ –¥–∞–Ω–Ω—ã—Ö!")
    
    bias_cases = get_bias_cases()
    
    bias_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å:", [case['title'] for case in bias_cases])
    selected_case = next(case for case in bias_cases if case['title'] == bias_choice)
    
    display_bias_case(selected_case)

def render_random_case_mode():
    """–†–µ–∂–∏–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–µ–π—Å–∞"""
    st.markdown("## üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å")
    st.markdown("–ü–æ–ª—É—á–∏ —Å–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞–≤—ã–∫–æ–≤!")
    
    if st.button("üé≤ –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å", type="primary"):
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–µ–π—Å—ã
        all_cases = []
        all_cases.extend(get_analysis_error_cases())
        all_cases.extend([{'type': 'scenario', **s} for s in get_decision_scenarios()])
        all_cases.extend([{'type': 'bias', **b} for b in get_bias_cases()])
        
        if all_cases:
            import random
            random_case = random.choice(all_cases)
            
            st.success(f"üéØ –°–ª—É—á–∞–π–Ω—ã–π –∫–µ–π—Å: **{random_case['title']}**")
            
            if random_case.get('type') == 'scenario':
                st.markdown("**–¢–∏–ø**: –°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π")
                play_scenario(random_case)
            elif random_case.get('type') == 'bias':
                st.markdown("**–¢–∏–ø**: –î–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–µ–π")
                display_bias_case(random_case)
            else:
                st.markdown("**–¢–∏–ø**: –ü–æ–∏—Å–∫ –æ—à–∏–±–∫–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ")
                display_analysis_case(random_case)

def render_stats_mode():
    """–†–µ–∂–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤"""
    st.markdown("## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏")
    
    stats = st.session_state.player_stats
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### üìà –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        
        stats_data = {
            '–ú–µ—Ç—Ä–∏–∫–∞': [
                '–û–±—â–∏–π —Å—á–µ—Ç',
                '–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å', 
                '–†–µ—à–µ–Ω–æ –∫–µ–π—Å–æ–≤',
                '–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è',
                '–õ—É—á—à–∞—è —Å–µ—Ä–∏—è',
                '–í—Ä–µ–º—è –∏–≥—Ä—ã (–º–∏–Ω)'
            ],
            '–ó–Ω–∞—á–µ–Ω–∏–µ': [
                stats['score'],
                stats['level'],
                len(stats['solved_cases']),
                stats['current_streak'],
                stats['best_streak'],
                stats['play_time']
            ]
        }
        
        st.table(stats_data)
    
    with col2:
        st.markdown("### üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
        
        if stats['achievements']:
            for achievement in stats['achievements']:
                st.success(f"üéñÔ∏è {achievement}")
        else:
            st.info("–ü–æ–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–µ—Ç. –ù–∞—á–Ω–∏ —Ä–µ—à–∞—Ç—å –∫–µ–π—Å—ã!")

# ===== –ò–ì–†–û–í–ê–Ø –ú–ï–•–ê–ù–ò–ö–ê =====
def award_points(points: int, case_id: str = None):
    """–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—á–∫–æ–≤ –∏–≥—Ä–æ–∫—É"""
    st.session_state.player_stats['score'] += points
    
    if case_id:
        st.session_state.player_stats['solved_cases'].add(case_id)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
    new_level = (st.session_state.player_stats['score'] // 100) + 1
    if new_level > st.session_state.player_stats['level']:
        st.session_state.player_stats['level'] = new_level
        st.balloons()
        st.success(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ {new_level} —É—Ä–æ–≤–Ω—è!")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–∏–∏
    st.session_state.player_stats['current_streak'] += 1
    st.session_state.player_stats['best_streak'] = max(
        st.session_state.player_stats['best_streak'],
        st.session_state.player_stats['current_streak']
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    check_achievements()

def reset_streak():
    """–°–±—Ä–æ—Å —Å–µ—Ä–∏–∏ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ"""
    st.session_state.player_stats['current_streak'] = 0

def check_achievements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    stats = st.session_state.player_stats
    achievements = stats['achievements']
    
    # –ü–µ—Ä–≤—ã–µ –æ—á–∫–∏
    if stats['score'] >= 10 and '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏' not in achievements:
        achievements.add('–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏' - –ó–∞—Ä–∞–±–æ—Ç–∞–π –ø–µ—Ä–≤—ã–µ –æ—á–∫–∏!")
    
    # –°–µ—Ä–∏–∏
    if stats['current_streak'] >= 5 and '–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤' not in achievements:
        achievements.add('–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–°–µ—Ä–∏–π–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤' - 5 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥!")
    
    # –£—Ä–æ–≤–Ω–∏
    if stats['level'] >= 3 and '–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫' not in achievements:
        achievements.add('–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫')
        st.success("üéñÔ∏è –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: '–û–ø—ã—Ç–Ω—ã–π —Å—ã—â–∏–∫' - –î–æ—Å—Ç–∏–≥–Ω–∏ 3 —É—Ä–æ–≤–Ω—è!")

def reset_game_state():
    """–°–±—Ä–æ—Å –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    st.session_state.player_stats = {
        'score': 0,
        'level': 1,
        'solved_cases': set(),
        'current_streak': 0,
        'best_streak': 0,
        'achievements': set(),
        'play_time': 0,
        'started_at': datetime.now().isoformat()
    }

def render_footer():
    """–§—É—Ç–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    st.markdown("---")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("### üéØ –û –ø—Ä–æ–µ–∫—Ç–µ")
        st.markdown("""
        **Statistical Detective** - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ 
        –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ –≤—ã—è–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫.
        """)
    
    with col2:
        st.markdown("### üîó –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã")
        st.markdown("""
        - [–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–≤](https://probability-laws-demo.streamlit.app/)
        - [GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π](https://github.com/Nero911-novice/statistics-detective)
        """)
    
    with col3:
        st.markdown("### üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        st.metric("ID —Å–µ—Å—Å–∏–∏", st.session_state.player_id)

# ===== –ö–ï–ô–°–´ –ò –î–ê–ù–ù–´–ï =====

def get_analysis_error_cases() -> List[Dict]:
    """–ë–∞–∑–∞ –∫–µ–π—Å–æ–≤ —Å –æ—à–∏–±–∫–∞–º–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ"""
    return [
        {
            'id': 'marketing_conversion_1',
            'difficulty': '–ù–æ–≤–∏—á–æ–∫',
            'title': '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ email-–∫–∞–º–ø–∞–Ω–∏–∏',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å email-–∫–∞–º–ø–∞–Ω–∏–∏.
            
            **–î–∞–Ω–Ω—ã–µ**:
            - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å–µ–º: 10,000
            - –û—Ç–∫—Ä—ã—Ç–æ –ø–∏—Å–µ–º: 2,500 (25%)
            - –ü–µ—Ä–µ—Ö–æ–¥—ã –Ω–∞ —Å–∞–π—Ç: 250 (10% –æ—Ç –æ—Ç–∫—Ä—ã–≤—à–∏—Ö)
            - –ü–æ–∫—É–ø–∫–∏: 25 (10% –æ—Ç –ø–µ—Ä–µ—à–µ–¥—à–∏—Ö)
            
            **–í—ã–≤–æ–¥ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∞**: "–ö–æ–Ω–≤–µ—Ä—Å–∏—è –∫–∞–º–ø–∞–Ω–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10%"
            """,
            'chart_data': {
                'emails_sent': 10000,
                'opened': 2500,
                'clicked': 250,
                'purchased': 25
            },
            'options': [
                "–ö–æ–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å—á–∏—Ç–∞—Ç—å—Å—è –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º (0.25%)",
                "–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è",
                "–ù—É–∂–Ω–æ —É—á–µ—Å—Ç—å bounce rate",
                "–ê–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –æ—à–∏–±–∫–∏ –Ω–µ—Ç"
            ],
            'correct': 0,
            'explanation': """
            **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç**: –ö–æ–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ª–∂–Ω–∞ —Å—á–∏—Ç–∞—Ç—å—Å—è –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º.
            
            **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ**: –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ —Å—á–∏—Ç–∞–ª –∫–æ–Ω–≤–µ—Ä—Å–∏—é –æ—Ç —á–∏—Å–ª–∞ –ø–µ—Ä–µ—à–µ–¥—à–∏—Ö (25/250 = 10%), 
            –Ω–æ –∏—Å—Ç–∏–Ω–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è –∫–∞–º–ø–∞–Ω–∏–∏ = –ø–æ–∫—É–ø–∫–∏/–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ = 25/10,000 = 0.25%.
            
            **–£—Ä–æ–∫**: –í—Å–µ–≥–¥–∞ —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª—è–π –±–∞–∑—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏!
            """,
            'points': 10
        },
        {
            'id': 'ab_test_significance',
            'difficulty': '–ê–Ω–∞–ª–∏—Ç–∏–∫', 
            'title': '–õ–æ–∂–Ω–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å A/B —Ç–µ—Å—Ç–∞',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å A/B —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –ø–æ—Å–∞–¥–æ—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
            
            **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã**:
            - –ì—Ä—É–ø–ø–∞ A (–∫–æ–Ω—Ç—Ä–æ–ª—å): 1,000 –≤–∏–∑–∏—Ç–æ–≤, 50 –∫–æ–Ω–≤–µ—Ä—Å–∏–π (5.0%)
            - –ì—Ä—É–ø–ø–∞ B (—Ç–µ—Å—Ç): 1,000 –≤–∏–∑–∏—Ç–æ–≤, 65 –∫–æ–Ω–≤–µ—Ä—Å–∏–π (6.5%)
            - p-value = 0.048 (< 0.05)
            
            **–í—ã–≤–æ–¥**: "–¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á–∏–º! –í–Ω–µ–¥—Ä—è–µ–º –≤–µ—Ä—Å–∏—é B!"
            """,
            'chart_data': None,
            'options': [
                "–ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ—â–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞",
                "–†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª –¥–ª—è –Ω–∞–¥–µ–∂–Ω—ã—Ö –≤—ã–≤–æ–¥–æ–≤", 
                "–ù–µ —É—á—Ç–µ–Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å (effect size)",
                "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –≤—ã—à–µ"
            ],
            'correct': 3,
            'explanation': """
            **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç**: –í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –≤—ã—à–µ.
            
            **–ü—Ä–æ–±–ª–µ–º—ã**:
            1. **–ú–æ—â–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞**: –ü—Ä–∏ —Ç–∞–∫–∏—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö –≤—ã–±–æ—Ä–∫–∏ –º–æ—â–Ω–æ—Å—Ç—å ~60% (–Ω—É–∂–Ω–æ >80%)
            2. **–ú–∞–ª–∞—è –≤—ã–±–æ—Ä–∫–∞**: 1000 –≤–∏–∑–∏—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ ~5%
            3. **Effect size**: –†–∞–∑–Ω–∏—Ü–∞ 1.5% –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–Ω–∞—á–∏–º–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏
            
            **–£—Ä–æ–∫**: –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å ‚â† –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å!
            """,
            'points': 15
        },
        {
            'id': 'simpsons_paradox',
            'difficulty': '–≠–∫—Å–ø–µ—Ä—Ç',
            'title': '–ü–∞—Ä–∞–¥–æ–∫—Å –°–∏–º–ø—Å–æ–Ω–∞ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –°—Ä–∞–≤–Ω–∏–≤–∞–µ—à—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–≤—É—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
            
            **–û–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã**:
            - –ö–∞–Ω–∞–ª A: 1000 –ø–æ–∫–∞–∑–æ–≤, 100 –∫–ª–∏–∫–æ–≤ (10% CTR)
            - –ö–∞–Ω–∞–ª B: 1000 –ø–æ–∫–∞–∑–æ–≤, 80 –∫–ª–∏–∫–æ–≤ (8% CTR)
            
            **–ü–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º**:
            Desktop: A = 200/300 (66.7%), B = 50/100 (50%)
            Mobile: A = 100/700 (14.3%), B = 30/900 (3.3%)
            
            **–í–æ–ø—Ä–æ—Å**: –ö–∞–∫–æ–π –∫–∞–Ω–∞–ª –ª—É—á—à–µ?
            """,
            'chart_data': {
                'total': {'A': 0.10, 'B': 0.08},
                'desktop': {'A': 0.667, 'B': 0.50},
                'mobile': {'A': 0.143, 'B': 0.033}
            },
            'options': [
                "–ö–∞–Ω–∞–ª A –ª—É—á—à–µ - –æ–±—â–∏–π CTR –≤—ã—à–µ",
                "–ö–∞–Ω–∞–ª B –ª—É—á—à–µ - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö",
                "–ü–∞—Ä–∞–¥–æ–∫—Å –°–∏–º–ø—Å–æ–Ω–∞: A –ª—É—á—à–µ –≤ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ, –Ω–æ B –ª—É—á—à–µ –≤ —Ü–µ–ª–æ–º",
                "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–≤–æ–¥–æ–≤"
            ],
            'correct': 2,
            'explanation': """
            **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç**: –ü–∞—Ä–∞–¥–æ–∫—Å –°–∏–º–ø—Å–æ–Ω–∞.
            
            **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ**: 
            - –ö–∞–Ω–∞–ª A –ª—É—á—à–µ –Ω–∞ –ö–ê–ñ–î–û–ú —Ç–∏–ø–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            - –ù–æ –æ–±—â–∏–π CTR –∫–∞–Ω–∞–ª–∞ A –Ω–∏–∂–µ –∏–∑-–∑–∞ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞
            - A –ø–æ–ª—É—á–∞–µ—Ç –±–æ–ª—å—à–µ —Å–ª–æ–∂–Ω–æ–≥–æ mobile-—Ç—Ä–∞—Ñ–∏–∫–∞ (70% vs 90%)
            
            **–£—Ä–æ–∫**: –í—Å–µ–≥–¥–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑—Ä–µ–∑–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤!
            """,
            'points': 25
        },
        {
            'id': 'correlation_causation',
            'difficulty': '–ê–Ω–∞–ª–∏—Ç–∏–∫',
            'title': '–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è vs –ü—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ê–Ω–∞–ª–∏—Ç–∏–∫ –Ω–∞—à–µ–ª —Å–∏–ª—å–Ω—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –º–µ–∂–¥—É —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –Ω–∞ —Ä–µ–∫–ª–∞–º—É –∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏.
            
            **–î–∞–Ω–Ω—ã–µ –∑–∞ 12 –º–µ—Å—è—Ü–µ–≤**:
            - –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É ad spend –∏ revenue: r = 0.89
            - –ü—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ —Ä–µ–∫–ª–∞–º—ã –Ω–∞ $1000, revenue —Ä–∞—Å—Ç–µ—Ç –Ω–∞ $3500
            
            **–í—ã–≤–æ–¥**: "–ö–∞–∂–¥—ã–π –¥–æ–ª–ª–∞—Ä —Ä–µ–∫–ª–∞–º—ã –ø—Ä–∏–Ω–æ—Å–∏—Ç $3.50 –¥–æ—Ö–æ–¥–∞. –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±—é–¥–∂–µ—Ç –≤ 2 —Ä–∞–∑–∞!"
            """,
            'chart_data': None,
            'options': [
                "–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å - –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã",
                "ROI 3.5:1 –æ—Ç–ª–∏—á–Ω—ã–π, –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –±—é–¥–∂–µ—Ç",
                "–ù—É–∂–Ω–æ —É—á–µ—Å—Ç—å seasonality –∏ –¥—Ä—É–≥–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã",
                "–ê –∏ –° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ"
            ],
            'correct': 3,
            'explanation': """
            **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç**: –ê –∏ –° –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ.
            
            **–ü—Ä–æ–±–ª–µ–º—ã**:
            1. **–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è ‚â† –ü—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å**: –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–¥–∞–∂–∏ —Ä–∞—Å—Ç—É—Ç –∏–∑-–∑–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏
            2. **Omitted variable bias**: –ù–µ —É—á—Ç–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã, —ç–∫–æ–Ω–æ–º–∏–∫–∞, —Ç—Ä–µ–Ω–¥—ã
            3. **Reverse causality**: –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏ —Ä–æ—Å—Ç–µ –ø—Ä–æ–¥–∞–∂ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —Ä–µ–∫–ª–∞–º—É
            
            **–ü—Ä–∞–≤–∏–ª—å–Ω–æ**: A/B —Ç–µ—Å—Ç —Å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–æ–π –±–µ–∑ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
            """,
            'points': 20
        },
        {
            'id': 'cherry_picking',
            'difficulty': '–ù–æ–≤–∏—á–æ–∫', 
            'title': '–°–µ–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ–≤–æ–≥–æ feature.
            
            **–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è**:
            "–ù–∞—à –Ω–æ–≤—ã–π feature –ø–æ–∫–∞–∑–∞–ª –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
            - Engagement –≤—ã—Ä–æ—Å –Ω–∞ 15% (—Å 20% –¥–æ 23%)
            - Time on page —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
            - –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —Å–æ—Å—Ç–∞–≤–∏–ª–∏ 78%"
            
            **–°–∫—Ä—ã—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**:
            - Retention —É–ø–∞–ª —Å 45% –¥–æ 38%
            - Conversion rate —Å–Ω–∏–∑–∏–ª—Å—è —Å 3.2% –¥–æ 2.8%
            - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ power users
            """,
            'chart_data': None,
            'options': [
                "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ª–∏—á–Ω—ã–µ, feature —É—Å–ø–µ—à–µ–Ω",
                "Cherry-picking: –ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏",
                "–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏",
                "–¢–µ—Å—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            ],
            'correct': 1,
            'explanation': """
            **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç**: Cherry-picking –¥–∞–Ω–Ω—ã—Ö.
            
            **–ü—Ä–æ–±–ª–µ–º–∞**: –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –º–µ—Ç—Ä–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∏–ª–∏—Å—å, –∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ 
            –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫–∏ (retention, conversion) —Å–∫—Ä—ã—Ç—ã.
            
            **–£—Ä–æ–∫**: –í—Å–µ–≥–¥–∞ —Ç—Ä–µ–±—É–π –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –º–µ—Ç—Ä–∏–∫, –æ—Å–æ–±–µ–Ω–Ω–æ —Å–µ–≤–µ—Ä–Ω—ã–µ –∑–≤–µ–∑–¥—ã!
            """,
            'points': 10
        }
    ]

def get_decision_scenarios() -> List[Dict]:
    """–ë–∞–∑–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π"""
    return [
        {
            'title': '–ö—Ä–∏–∑–∏—Å —Å–Ω–∏–∂–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
            'id': 'conversion_crisis',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ö–æ–Ω–≤–µ—Ä—Å–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —É–ø–∞–ª–∞ —Å 3% –¥–æ 2% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü.
            –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ç—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø–ª–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π.
            """,
            'steps': [
                {
                    'text': "–° —á–µ–≥–æ –Ω–∞—á–Ω–µ—à—å –∞–Ω–∞–ª–∏–∑?",
                    'options': [
                        "–°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ",
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑—Ä–µ–∑–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤",
                        "–ó–∞–ø—É—â—É A/B —Ç–µ—Å—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
                        "–ò–∑—É—á—É –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤"
                    ],
                    'correct': 1,
                    'feedback': {
                        0: "–•–æ—Ä–æ—à–∞—è –º—ã—Å–ª—å, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–Ω—è—Ç—å –º–∞—Å—à—Ç–∞–± –ø—Ä–æ–±–ª–µ–º—ã —á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–µ.",
                        1: "–û—Ç–ª–∏—á–Ω–æ! –°–µ–≥–º–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∂–µ—Ç, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞.",
                        2: "–ü—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ - —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É —Ç–µ–∫—É—â–µ–≥–æ –ø–∞–¥–µ–Ω–∏—è.",
                        3: "–ü–æ–ª–µ–∑–Ω–æ, –Ω–æ –≤—Ç–æ—Ä–∏—á–Ω–æ. –°–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–±–µ—Ä–∏—Å—å —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."
                    }
                },
                {
                    'text': "–°–µ–≥–º–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª: –º–æ–±–∏–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è —É–ø–∞–ª–∞ —Å 2.5% –¥–æ 1.2%, –¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–∞ (4.2%). –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥?",
                    'options': [
                        "–ü—Ä–æ–≤–µ—Ä—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞",
                        "–ò–∑—É—á—É –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö",
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏",
                        "–í—Å–µ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ"
                    ],
                    'correct': 3,
                    'feedback': {
                        0: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ —ç—Ç–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω—ã.",
                        1: "–í–∞–∂–Ω—ã–π –∞—Å–ø–µ–∫—Ç, –Ω–æ –Ω–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π.",
                        2: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ, –Ω–æ –Ω—É–∂–µ–Ω –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥.",
                        3: "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞—Å—Ç –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É."
                    }
                },
                {
                    'text': "–ê–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª: –Ω–æ–≤—ã–π –º–æ–±–∏–ª—å–Ω—ã–π checkout —É–≤–µ–ª–∏—á–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ —Å 3 –¥–æ 5. –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã—Ä–æ—Å–ª–∞ —Å 2—Å –¥–æ 4—Å. –ß—Ç–æ –¥–µ–ª–∞–µ—à—å?",
                    'options': [
                        "–û—Ç–∫–∞—Ç—ã–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
                        "–ó–∞–ø—É—Å–∫–∞—é A/B —Ç–µ—Å—Ç —Å—Ç–∞—Ä–æ–π vs –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏",
                        "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (—Å–∫–æ—Ä–æ—Å—Ç—å + UX)",
                        "–°–æ–±–∏—Ä–∞—é —Ñ–æ–∫—É—Å-–≥—Ä—É–ø–ø—É –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"
                    ],
                    'correct': 2,
                    'feedback': {
                        0: "–ë—ã—Å—Ç—Ä–æ, –Ω–æ –Ω–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ - —Ç–µ—Ä—è–µ—à—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏.",
                        1: "–•–æ—Ä–æ—à–æ, –Ω–æ —Ç—ã —É–∂–µ –∑–Ω–∞–µ—à—å –ø—Ä–æ–±–ª–µ–º—ã - –ª—É—á—à–µ –∏—Ö —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.",
                        2: "–û—Ç–ª–∏—á–Ω–æ! –§–∏–∫—Å–∏—à—å –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏.",
                        3: "–ü–æ–ª–µ–∑–Ω–æ, –Ω–æ —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω–æ –¥–ª—è –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."
                    }
                }
            ]
        },
        {
            'title': '–ê–Ω–æ–º–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç –º–µ—Ç—Ä–∏–∫–∏',
            'id': 'metric_anomaly', 
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –í—á–µ—Ä–∞ DAU –≤—ã—Ä–æ—Å –Ω–∞ 40% –±–µ–∑ –≤–∏–¥–∏–º—ã—Ö –ø—Ä–∏—á–∏–Ω. 
            –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ, –Ω–æ —Ç–µ–±–µ —á—Ç–æ-—Ç–æ –∫–∞–∂–µ—Ç—Å—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º.
            """,
            'steps': [
                {
                    'text': "–¢–≤–æ—è –ø–µ—Ä–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∞–Ω–æ–º–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç?",
                    'options': [
                        "–ü–æ–∑–¥—Ä–∞–≤–ª—é –∫–æ–º–∞–Ω–¥—É —Å –æ—Ç–ª–∏—á–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º",
                        "–ü—Ä–æ–≤–µ—Ä—é –¥–∞–Ω–Ω—ã–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤",
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞",
                        "–ü—Ä–æ–≤–µ—Ä—é, –Ω–µ –±—ã–ª–æ –ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                    ],
                    'correct': 1,
                    'feedback': {
                        0: "–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è - –∞–Ω–æ–º–∞–ª–∏–∏ —á–∞—Å—Ç–æ –æ–∑–Ω–∞—á–∞—é—Ç –æ—à–∏–±–∫–∏ –≤ –¥–∞–Ω–Ω—ã—Ö.",
                        1: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º - –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö.",
                        2: "–í–∞–∂–Ω–æ, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ —É–±–µ–¥–∏—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.",
                        3: "–•–æ—Ä–æ—à–∞—è –º—ã—Å–ª—å, –Ω–æ –Ω–∞—á–Ω–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö."
                    }
                },
                {
                    'text': "–û–±–Ω–∞—Ä—É–∂–∏–ª: —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å—á–∏—Ç–∞–ª–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑-–∑–∞ –±–∞–≥–∞. –ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—à—å?",
                    'options': [
                        "–ò—Å–ø—Ä–∞–≤–ª—é –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–Ω–∏–º —á–∏—Å–ª–æ–º –∏ –Ω–∏–∫–æ–º—É –Ω–µ —Å–∫–∞–∂—É",
                        "–°–æ–æ–±—â—É –∫–æ–º–∞–Ω–¥–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∏—Å–ø—Ä–∞–≤–ª—é –º–µ—Ç—Ä–∏–∫–∏",
                        "–û—Å—Ç–∞–≤–ª—é –∫–∞–∫ –µ—Å—Ç—å - —Ä–æ—Å—Ç —É–∂–µ –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª–∏",
                        "–°–æ–∑–¥–∞–º –Ω–æ–≤—É—é –º–µ—Ç—Ä–∏–∫—É –≤–º–µ—Å—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–π"
                    ],
                    'correct': 1,
                    'feedback': {
                        0: "–ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º –≤ –±—É–¥—É—â–µ–º.",
                        1: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ß–µ—Å—Ç–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞.",
                        2: "–ü–ª–æ—Ö–æ - –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
                        3: "–ò–∑–±—ã—Ç–æ—á–Ω–æ —Å–ª–æ–∂–Ω–æ –∏ —Å–æ–∑–¥–∞–µ—Ç –ø—É—Ç–∞–Ω–∏—Ü—É."
                    }
                }
            ]
        }
    ]

def get_bias_cases() -> List[Dict]:
    """–ë–∞–∑–∞ –∫–µ–π—Å–æ–≤ —Å –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—è–º–∏"""
    return [
        {
            'title': '–ü—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å –≤—ã–∂–∏–≤—à–µ–≥–æ –≤ A/B —Ç–µ—Å—Ç–µ',
            'id': 'survivorship_bias',
            'description': """
            **–ö–µ–π—Å**: –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ–æ—Ä–º—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ email.
            
            **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏**:
            - –í–µ—Ä—Å–∏—è A: 1000 –ø–æ–∫–∞–∑–æ–≤, 100 –ø–æ–¥–ø–∏—Å–æ–∫ (10%)
            - –í–µ—Ä—Å–∏—è B: 1000 –ø–æ–∫–∞–∑–æ–≤, 150 –ø–æ–¥–ø–∏—Å–æ–∫ (15%)
            
            **–í—ã–≤–æ–¥**: "–í–µ—Ä—Å–∏—è B –ª—É—á—à–µ –Ω–∞ 50%! –í–Ω–µ–¥—Ä—è–µ–º!"
            """,
            'bias_type': 'survivorship',
            'chart_data': {
                'shown': [1000, 1000],
                'subscribed': [100, 150],
                'active_after_month': [85, 90]
            },
            'questions': [
                "–ö–∞–∫—É—é –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å —Ç—ã –≤–∏–¥–∏—à—å –≤ —ç—Ç–æ–º –∞–Ω–∞–ª–∏–∑–µ?",
                "–ß—Ç–æ –µ—â–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å?"
            ],
            'hints': [
                "–ü–æ–¥—É–º–∞–π –æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ...",
                "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü?"
            ],
            'revelation': """
            **–°–∫—Ä—ã—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**: –ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Å—Ç–∞–ª–∏—Å—å:
            - –í–µ—Ä—Å–∏—è A: 85 –∏–∑ 100 (85% retention)
            - –í–µ—Ä—Å–∏—è B: 90 –∏–∑ 150 (60% retention)
            
            **–í—ã–≤–æ–¥**: –í–µ—Ä—Å–∏—è B –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –±–æ–ª—å—à–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –Ω–æ –æ–Ω–∏ –º–µ–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ!
            """
        },
        {
            'title': '–°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–±–æ—Ä–∞',
            'id': 'selection_bias',
            'description': """
            **–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ**: –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ email-–¥–∏–∑–∞–π–Ω–∞.
            
            **–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è**: –û—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ 
            –ø–∏—Å—å–º–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π.
            
            **–†–µ–∑—É–ª—å—Ç–∞—Ç**: Open rate —É–≤–µ–ª–∏—á–∏–ª—Å—è —Å 25% –¥–æ 35%!
            """,
            'bias_type': 'selection',
            'questions': [
                "–í —á–µ–º –ø—Ä–æ–±–ª–µ–º–∞ —ç—Ç–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è?",
                "–ö–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–≤–æ–¥—ã?"
            ],
            'hints': [
                "–ü–æ–¥—É–º–∞–π –æ –≤—ã–±–æ—Ä–∫–µ...",
                "–ö–æ–≥–æ –≤–∫–ª—é—á–∏–ª–∏ –≤ —Ç–µ—Å—Ç?"
            ],
            'revelation': """
            **–ü—Ä–æ–±–ª–µ–º–∞**: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö!
            –≠—Ç–æ –∫–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π —Å–∞–º–æ–ª–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∏–ª–æ—Ç–∞—Ö-–∞—Å–∞—Ö.
            
            **–ü—Ä–∞–≤–∏–ª—å–Ω–æ**: –°–ª—É—á–∞–π–Ω–∞—è –≤—ã–±–æ—Ä–∫–∞ –∏–∑ –≤—Å–µ–π –±–∞–∑—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.
            """
        },
        {
            'title': '–ü—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
            'id': 'confirmation_bias',
            'description': """
            **–°–∏—Ç—É–∞—Ü–∏—è**: –ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞ –Ω–æ–≤—ã–π feature. 
            –ü–æ—Å–ª–µ –¥–≤—É—Ö –Ω–µ–¥–µ–ª—å A/B —Ç–µ—Å—Ç–∞:
            
            **–ú–µ—Ç—Ä–∏–∫–∏**:
            - Engagement: +12% ‚úÖ
            - Session duration: +8% ‚úÖ  
            - Revenue per user: -3% ‚ùå
            - User retention: -5% ‚ùå
            
            **–í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã**: "Feature —É—Å–ø–µ—à–µ–Ω! Engagement —Ä–∞—Å—Ç–µ—Ç!"
            """,
            'bias_type': 'confirmation',
            'questions': [
                "–ö–∞–∫–∞—è –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –≤—ã–≤–æ–¥–∞—Ö?",
                "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?"
            ],
            'hints': [
                "–ö–æ–º–∞–Ω–¥–∞ –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —Ö–æ—á–µ—Ç –≤–∏–¥–µ—Ç—å...",
                "–ö–∞–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –≤–∞–∂–Ω–µ–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞?"
            ],
            'revelation': """
            **–ü—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è**: –ö–æ–º–∞–Ω–¥–∞ —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö 
            –º–µ—Ç—Ä–∏–∫–∞—Ö, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ (revenue, retention).
            
            **–ü—Ä–∞–≤–∏–ª—å–Ω–æ**: –°–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø–æ–ª–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É –º–µ—Ç—Ä–∏–∫ –∏ –∏—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã.
            """
        }
    ]

def display_analysis_case(case: Dict):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–µ–π—Å–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
    st.markdown(f"### {case['title']}")
    st.markdown(case['description'])
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å
    if case.get('chart_data'):
        create_case_visualization(case)
    
    # –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    st.markdown("### ü§î –ß—Ç–æ –Ω–µ —Ç–∞–∫ —Å —ç—Ç–∏–º –∞–Ω–∞–ª–∏–∑–æ–º?")
    
    answer = st.radio("–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:", case['options'], key=f"case_{case['id']}")
    
    col1, col2 = st.columns(2)
    
    with col1:
        if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç", key=f"check_{case['id']}"):
            check_analysis_answer(case, answer)
    
    with col2:
        if st.button("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞", key=f"hint_{case['id']}"):
            give_hint(case)

def create_case_visualization(case: Dict):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∫–µ–π—Å–∞"""
    case_id = case['id']
    
    if case_id == 'marketing_conversion_1':
        # –í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        fig, ax = plt.subplots(figsize=(10, 6))
        
        stages = ['–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', '–û—Ç–∫—Ä—ã—Ç–æ', '–ü–µ—Ä–µ—à–ª–∏', '–ö—É–ø–∏–ª–∏']
        values = [10000, 2500, 250, 25]
        colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']
        
        bars = ax.bar(stages, values, color=colors, alpha=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
        for i, (bar, value) in enumerate(zip(bars, values)):
            if i > 0:
                pct = (value / values[i-1]) * 100
                ax.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 100,
                       f'{pct:.1f}%', ha='center', va='bottom', fontweight='bold')
            ax.text(bar.get_x() + bar.get_width()/2, bar.get_height()/2,
                   f'{value:,}', ha='center', va='center', color='white', fontweight='bold')
        
        ax.set_title("–í–æ—Ä–æ–Ω–∫–∞ email-–∫–∞–º–ø–∞–Ω–∏–∏", fontsize=14)
        ax.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
        
        fig.tight_layout()
        st.pyplot(fig)
        
    elif case_id == 'simpsons_paradox':
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–¥–æ–∫—Å–∞ –°–∏–º–ø—Å–æ–Ω–∞
        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))
        
        # –û–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        channels = ['–ö–∞–Ω–∞–ª A', '–ö–∞–Ω–∞–ª B']
        ctr_total = [10, 8]
        ax1.bar(channels, ctr_total, color=['blue', 'red'], alpha=0.7)
        ax1.set_title("–û–±—â–∏–π CTR (%)")
        ax1.set_ylabel("CTR (%)")
        
        # –ü–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º
        devices = ['Desktop', 'Mobile']
        ctr_a = [66.7, 14.3]
        ctr_b = [50.0, 3.3]
        
        x = np.arange(len(devices))
        width = 0.35
        
        ax2.bar(x - width/2, ctr_a, width, label='–ö–∞–Ω–∞–ª A', color='blue', alpha=0.7)
        ax2.bar(x + width/2, ctr_b, width, label='–ö–∞–Ω–∞–ª B', color='red', alpha=0.7)
        
        ax2.set_title("CTR –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º (%)")
        ax2.set_ylabel("CTR (%)")
        ax2.set_xticks(x)
        ax2.set_xticklabels(devices)
        ax2.legend()
        
        fig.tight_layout()
        st.pyplot(fig)

def check_analysis_answer(case: Dict, user_answer: str):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    correct_index = case['correct']
    user_index = case['options'].index(user_answer)
    
    if user_index == correct_index:
        st.success("üéâ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –¥–µ—Ç–µ–∫—Ç–∏–≤!")
        st.markdown(case['explanation'])
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏
        award_points(case['points'], case['id'])
        
        st.balloons()
        
    else:
        st.error("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")
        reset_streak()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç–∏—á–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        st.info("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –±–∞–∑—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞.")

def give_hint(case: Dict):
    """–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫"""
    hints = {
        'marketing_conversion_1': "üîç –ü–æ–¥—Å–∫–∞–∑–∫–∞: –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, –æ—Ç –∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç. –ß—Ç–æ —Ç–∞–∫–æ–µ '–∫–æ–Ω–≤–µ—Ä—Å–∏—è –∫–∞–º–ø–∞–Ω–∏–∏'?",
        'ab_test_significance': "üîç –ü–æ–¥—Å–∫–∞–∑–∫–∞: p-value < 0.05 –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏. –ö–∞–∫–∏–µ –µ—â–µ –º–µ—Ç—Ä–∏–∫–∏ –≤–∞–∂–Ω—ã?",
        'simpsons_paradox': "üîç –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ –∫–∞–∂–¥–æ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É. –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø vs –≤ —Ü–µ–ª–æ–º?",
        'correlation_causation': "üîç –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –Ω–µ —Ä–∞–≤–Ω–∞ –ø—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç–∏. –ö–∞–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –º–æ–≥–ª–∏ –ø–æ–≤–ª–∏—è—Ç—å?",
        'cherry_picking': "üîç –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ö–∞–∫–∏–µ –≤–∞–∂–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –º–æ–≥–ª–∏ –±—ã—Ç—å —Å–∫—Ä—ã—Ç—ã?"
    }
    
    hint = hints.get(case['id'], "üîç –û–±—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞: –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –±–∞–∑—ã —Ä–∞—Å—á–µ—Ç–∞ –∏ —Å–∫—Ä—ã—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ!")
    st.info(hint)

def play_scenario(scenario: Dict):
    """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    st.markdown(f"### {scenario['title']}")
    st.markdown(scenario['description'])
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è
    scenario_key = f"scenario_{scenario['id']}"
    if scenario_key not in st.session_state:
        st.session_state[scenario_key] = {'step': 0, 'score': 0, 'choices': []}
    
    current_step = st.session_state[scenario_key]['step']
    
    if current_step < len(scenario['steps']):
        step = scenario['steps'][current_step]
        
        st.markdown(f"#### –®–∞–≥ {current_step + 1}")
        st.markdown(step['text'])
        
        choice = st.radio("–¢–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ:", step['options'], key=f"{scenario_key}_step_{current_step}")
        
        if st.button("–ü—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ", key=f"{scenario_key}_decide_{current_step}"):
            user_choice_index = step['options'].index(choice)
            st.session_state[scenario_key]['choices'].append(user_choice_index)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
            feedback = step['feedback'][user_choice_index]
            
            if user_choice_index == step['correct']:
                st.success(f"‚úÖ {feedback}")
                st.session_state[scenario_key]['score'] += 10
                award_points(10)
            else:
                st.warning(f"ü§î {feedback}")
                reset_streak()
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
            st.session_state[scenario_key]['step'] += 1
            
            time.sleep(2)
            st.rerun()
    
    else:
        # –°—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω
        total_score = st.session_state[scenario_key]['score']
        max_score = len(scenario['steps']) * 10
        
        st.success(f"üéâ –°—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {total_score}/{max_score}")
        
        if total_score == max_score:
            st.markdown("üëë –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –ø—Ä–∏–Ω—è–ª –≤—Å–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.")
        elif total_score >= max_score * 0.7:
            st.markdown("üëç –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏–π –±—ã–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏.")
        else:
            st.markdown("üìö –ï—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")
        
        if st.button("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", key=f"{scenario_key}_restart"):
            del st.session_state[scenario_key]
            st.rerun()

def display_bias_case(case: Dict):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–µ–π—Å–∞ —Å –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å—é"""
    st.markdown(f"### {case['title']}")
    st.markdown(case['description'])
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ —Å "–æ–±–º–∞–Ω—á–∏–≤—ã–º–∏" –¥–∞–Ω–Ω—ã–º–∏
    if 'chart_data' in case:
        create_bias_visualization(case, reveal_bias=False)
    
    # –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
    for i, question in enumerate(case['questions']):
        st.markdown(f"**ü§î {question}**")
        user_input = st.text_area(f"–¢–≤–æ–∏ –º—ã—Å–ª–∏:", key=f"bias_input_{case['id']}_{i}", height=100)
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞", key=f"bias_hint_{case['id']}"):
            for hint in case['hints']:
                st.info(hint)
    
    with col2:
        if st.button("üé≠ –†–∞—Å–∫—Ä—ã—Ç—å –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å", key=f"bias_reveal_{case['id']}"):
            st.error("‚ö†Ô∏è **–ü–†–ï–î–í–ó–Ø–¢–û–°–¢–¨ –û–ë–ù–ê–†–£–ñ–ï–ù–ê!**")
            st.markdown(case['revelation'])
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "—á–µ—Å—Ç–Ω—ã–π" –≥—Ä–∞—Ñ–∏–∫
            if 'chart_data' in case:
                create_bias_visualization(case, reveal_bias=True)
    
    with col3:
        if st.button("‚úÖ –ü–æ–Ω—è–ª!", key=f"bias_understood_{case['id']}"):
            award_points(20, case['id'])
            st.success("–û—Ç–ª–∏—á–Ω–æ! +20 –æ—á–∫–æ–≤ –¥–µ—Ç–µ–∫—Ç–∏–≤–∞!")

def create_bias_visualization(case: Dict, reveal_bias: bool = False):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–∏"""
    if case['id'] == 'survivorship_bias':
        fig, ax = plt.subplots(figsize=(10, 6))
        
        versions = ['–í–µ—Ä—Å–∏—è A', '–í–µ—Ä—Å–∏—è B']
        subscriptions = case['chart_data']['subscribed']
        
        bars = ax.bar(versions, subscriptions, color=['blue', 'orange'], alpha=0.7)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
        for bar, sub, shown in zip(bars, subscriptions, case['chart_data']['shown']):
            pct = (sub / shown) * 100
            ax.text(bar.get_x() + bar.get_width()/2, bar.get_height() + 5,
                   f'{pct:.0f}%', ha='center', va='bottom', fontweight='bold')
        
        ax.set_title("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã A/B —Ç–µ—Å—Ç–∞ –ø–æ–¥–ø–∏—Å–æ–∫" + 
                    (" (–ü–û–õ–ù–ê–Ø –ö–ê–†–¢–ò–ù–ê)" if reveal_bias else ""), fontsize=14)
        ax.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫")
        
        if reveal_bias:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º retention
            ax2 = ax.twinx()
            retention = [active/sub * 100 for active, sub in 
                        zip(case['chart_data']['active_after_month'], subscriptions)]
            
            line = ax2.plot(versions, retention, 'ro-', linewidth=3, markersize=10, 
                           label='Retention —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü (%)')
            ax2.set_ylabel("Retention (%)", color='red')
            ax2.tick_params(axis='y', labelcolor='red')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ retention
            for i, (version, ret) in enumerate(zip(versions, retention)):
                ax2.annotate(f'{ret:.0f}%', xy=(i, ret), xytext=(10, 10),
                           textcoords='offset points', color='red', fontweight='bold')
            
            ax2.legend(loc='upper right')
        
        fig.tight_layout()
        st.pyplot(fig)

# ===== –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø =====
if __name__ == "__main__":
    main()
